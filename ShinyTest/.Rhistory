shiny::runApp()
install.packages("XM")
install.packages("XML")
runApp()
install.packages("devtools")
runApp()
install.packages("ggbiplot")
install_github("ggbiplot", "vqv")
runApp()
runApp()
runApp()
mixseg = worker()
#斷詞
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(NLP)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(factoextra)
d.corpus <- Corpus( DirSource("./data/poem", encoding = "UTF-8"))
d.corpus <- Corpus( DirSource("./data/poem", encoding = "UTF-8"))
runApp()
# TDM
n = length(seg)
mixseg = worker()
#斷詞
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(NLP)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(factoextra)
d.corpus <- Corpus( DirSource("./data/poem", encoding = "UTF-8"))
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('D:/Desktop/106Summer-master/week5/week5.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
